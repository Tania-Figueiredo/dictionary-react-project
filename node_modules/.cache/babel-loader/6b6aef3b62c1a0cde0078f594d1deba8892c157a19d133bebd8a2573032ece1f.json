{"ast":null,"code":"import React,{useState}from\"react\";import axios from\"axios\";import\"./App.css\";import DefinitionCard from\"./DefinitionCard\";import SectionBox from\"./SectionBox\";import PhotosGallery from\"./PhotosGallery\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Dictionary(){const[keyword,setKeyword]=useState(\"\");const[dictionaryData,setDictionaryData]=useState(null);const[photos,setPhotos]=useState([]);function handleKeywordChange(event){setKeyword(event.target.value);}function fetchDictionaryData(word){const url=`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`;return axios.get(url);}function fetchPhotosData(word){const pexelsApiUrl=`https://api.pexels.com/v1/search?query=${word}&per_page=4`;return axios.get(pexelsApiUrl,{headers:{Authorization:process.env.REACT_APP_PEXELS_API_KEY}});}function parseDictionaryData(data){var _entry$phonetics,_entry$phonetics$find;const entry=data[0];const word=entry.word;const phonetic=entry.phonetic||((_entry$phonetics=entry.phonetics)===null||_entry$phonetics===void 0?void 0:(_entry$phonetics$find=_entry$phonetics.find(p=>p.text))===null||_entry$phonetics$find===void 0?void 0:_entry$phonetics$find.text)||\"\";const meanings=entry.meanings||[];const allDefinitions=meanings.flatMap(m=>m.definitions.map(d=>d.definition)).filter(d=>d&&d.trim()!==\"\");const getByType=type=>meanings.filter(m=>m.partOfSpeech===type).flatMap(m=>m.definitions.map(d=>d.definition)).filter(Boolean).slice(0,3);const getSynonyms=()=>meanings.flatMap(m=>m.definitions).flatMap(d=>d.synonyms||[]).filter((s,i,arr)=>arr.indexOf(s)===i).slice(0,3);return{word,phonetic,definitions:allDefinitions,adjectives:getByType(\"adjective\"),nouns:getByType(\"noun\"),synonyms:getSynonyms()};}function search(event){event.preventDefault();if(!keyword.trim())return;fetchDictionaryData(keyword).then(response=>{const parsed=parseDictionaryData(response.data);setDictionaryData(parsed);}).catch(error=>{console.error(\"Error in Dictionary API:\",error);setDictionaryData(null);});fetchPhotosData(keyword).then(response=>{setPhotos(response.data.photos.slice(0,4));}).catch(error=>{console.error(\"Error in Pexels API:\",error);setPhotos([]);});}return/*#__PURE__*/_jsxs(\"div\",{className:\"Dictionary container py-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"mb-4 text-center\",children:\"Dictionary App\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:search,className:\"mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"search\",onChange:handleKeywordChange,placeholder:\"Search for a word\",className:\"form-control\",value:keyword}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Search\"})]})}),dictionaryData&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(DefinitionCard,{word:dictionaryData.word,phonetic:dictionaryData.phonetic,definitions:dictionaryData.definitions}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(SectionBox,{title:\"Adjectives\",items:dictionaryData.adjectives}),/*#__PURE__*/_jsx(SectionBox,{title:\"Nouns\",items:dictionaryData.nouns}),/*#__PURE__*/_jsx(SectionBox,{title:\"Synonyms\",items:dictionaryData.synonyms})]})]}),photos.length>0&&/*#__PURE__*/_jsx(PhotosGallery,{photos:photos,keyword:keyword})]});}","map":{"version":3,"names":["React","useState","axios","DefinitionCard","SectionBox","PhotosGallery","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Dictionary","keyword","setKeyword","dictionaryData","setDictionaryData","photos","setPhotos","handleKeywordChange","event","target","value","fetchDictionaryData","word","url","get","fetchPhotosData","pexelsApiUrl","headers","Authorization","process","env","REACT_APP_PEXELS_API_KEY","parseDictionaryData","data","_entry$phonetics","_entry$phonetics$find","entry","phonetic","phonetics","find","p","text","meanings","allDefinitions","flatMap","m","definitions","map","d","definition","filter","trim","getByType","type","partOfSpeech","Boolean","slice","getSynonyms","synonyms","s","i","arr","indexOf","adjectives","nouns","search","preventDefault","then","response","parsed","catch","error","console","className","children","onSubmit","onChange","placeholder","title","items","length"],"sources":["/Users/taniafigueiredo/Desktop/SheCodes/GitHub/dictionary-react-project/src/Dictionary.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport DefinitionCard from \"./DefinitionCard\";\nimport SectionBox from \"./SectionBox\";\nimport PhotosGallery from \"./PhotosGallery\";\n\nexport default function Dictionary() {\n  const [keyword, setKeyword] = useState(\"\");\n  const [dictionaryData, setDictionaryData] = useState(null);\n  const [photos, setPhotos] = useState([]);\n\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n\n  function fetchDictionaryData(word) {\n    const url = `https://api.dictionaryapi.dev/api/v2/entries/en/${word}`;\n    return axios.get(url);\n  }\n\n  function fetchPhotosData(word) {\n    const pexelsApiUrl = `https://api.pexels.com/v1/search?query=${word}&per_page=4`;\n    return axios.get(pexelsApiUrl, {\n      headers: {\n        Authorization: process.env.REACT_APP_PEXELS_API_KEY,\n      },\n    });\n  }\n\n  function parseDictionaryData(data) {\n    const entry = data[0];\n    const word = entry.word;\n    const phonetic =\n      entry.phonetic || entry.phonetics?.find((p) => p.text)?.text || \"\";\n\n    const meanings = entry.meanings || [];\n\n    const allDefinitions = meanings\n      .flatMap((m) => m.definitions.map((d) => d.definition))\n      .filter((d) => d && d.trim() !== \"\");\n\n    const getByType = (type) =>\n      meanings\n        .filter((m) => m.partOfSpeech === type)\n        .flatMap((m) => m.definitions.map((d) => d.definition))\n        .filter(Boolean)\n        .slice(0, 3);\n\n    const getSynonyms = () =>\n      meanings\n        .flatMap((m) => m.definitions)\n        .flatMap((d) => d.synonyms || [])\n        .filter((s, i, arr) => arr.indexOf(s) === i)\n        .slice(0, 3);\n\n    return {\n      word,\n      phonetic,\n      definitions: allDefinitions,\n      adjectives: getByType(\"adjective\"),\n      nouns: getByType(\"noun\"),\n      synonyms: getSynonyms(),\n    };\n  }\n\n  function search(event) {\n    event.preventDefault();\n    if (!keyword.trim()) return;\n\n    fetchDictionaryData(keyword)\n      .then((response) => {\n        const parsed = parseDictionaryData(response.data);\n        setDictionaryData(parsed);\n      })\n      .catch((error) => {\n        console.error(\"Error in Dictionary API:\", error);\n        setDictionaryData(null);\n      });\n\n    fetchPhotosData(keyword)\n      .then((response) => {\n        setPhotos(response.data.photos.slice(0, 4));\n      })\n      .catch((error) => {\n        console.error(\"Error in Pexels API:\", error);\n        setPhotos([]);\n      });\n  }\n\n  return (\n    <div className=\"Dictionary container py-4\">\n      <h1 className=\"mb-4 text-center\">Dictionary App</h1>\n      <form onSubmit={search} className=\"mb-4\">\n        <div className=\"input-group\">\n          <input\n            type=\"search\"\n            onChange={handleKeywordChange}\n            placeholder=\"Search for a word\"\n            className=\"form-control\"\n            value={keyword}\n          />\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Search\n          </button>\n        </div>\n      </form>\n\n      {dictionaryData && (\n        <>\n          <DefinitionCard\n            word={dictionaryData.word}\n            phonetic={dictionaryData.phonetic}\n            definitions={dictionaryData.definitions}\n          />\n          <div className=\"row\">\n            <SectionBox title=\"Adjectives\" items={dictionaryData.adjectives} />\n            <SectionBox title=\"Nouns\" items={dictionaryData.nouns} />\n            <SectionBox title=\"Synonyms\" items={dictionaryData.synonyms} />\n          </div>\n        </>\n      )}\n\n      {photos.length > 0 && <PhotosGallery photos={photos} keyword={keyword} />}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}